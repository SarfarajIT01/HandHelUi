@page "/tables"

<div class="table-container">
    <!-- Tabs -->
    <div class="tab-header">
        <button class="@GetTabClass("Occupied")" @onclick='() => SelectTab("Occupied")'>Occupied</button>
        <button class="@GetTabClass("Vacant")" @onclick='() => SelectTab("Vacant")'>Vacant</button>
        <button class="@GetTabClass("All")" @onclick='() => SelectTab("All")'>All</button>
    </div>

    <!-- Table Data -->
    <div class="responsive-table">
        <table>
            <thead>
                <tr>
                    <th>Table</th>
                    @if (SelectedTab == "Occupied")
                    {
                        <th>Order No</th>
                        @* <th>Status</th> *@
                        <th>Steward</th>
                        <th>Time</th>
                        <th>Cover</th>
                        <th>Qty</th>
                        <th>Rate</th>
                        <th>Name</th>
                        <th>Amount</th>
                    }
                    else if (SelectedTab == "All")
                    {
                        <th>Order No</th>
                        <th>Status</th>
                        <th>Steward</th>
                        <th>Time</th>
                        <th>Cover</th>
                        <th>Qty</th>
                        <th>Rate</th>
                        <th>Name</th>
                        <th>Amount</th>
                    }
                    else
                    {
                        <th>Status</th>
                    }
                </tr>
            </thead>

            <tbody>
                @foreach (var table in FilteredTables)
                {
                    <tr class="@GetRowClass(table)">
                        <td>@table.TableNo</td>

                        @if (SelectedTab == "Occupied")
                        {
                            <td>@table.OrderNo</td>
                            @* <td>@table.Status</td> *@
                            <td>@table.Steward</td>
                            <td>@table.Time</td>
                            <td>@table.Cover</td>
                            <td>@table.Quantity</td>
                            <td>@table.Rate.ToString("0.00")</td>
                            <td>@table.ItemName</td>
                            <td>@table.Amount.ToString("0.00")</td>
                        }
                        else if (SelectedTab == "All")
                        {
                            <td>@table.OrderNo</td>
                            <td>@table.Status</td>
                            <td>@table.Steward</td>
                            <td>@table.Time</td>
                            <td>@table.Cover</td>
                            <td>@table.Quantity</td>
                            <td>@table.Rate.ToString("0.00")</td>
                            <td>@table.ItemName</td>
                            <td>@table.Amount.ToString("0.00")</td>
                        }
                        else
                        {
                            <td>@table.Status</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private string SelectedTab = "Occupied";

    private List<TableInfo> AllTables = new()
    {
        new TableInfo { TableNo="001", OrderNo="RG1152857", Status="A", Steward="032", Time="17:30", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="002", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="003", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="004", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="005", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="006", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="007", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="008", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="009", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="010", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="011", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="012", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="013", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="014", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="015", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="016", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        new TableInfo { TableNo="017", OrderNo="RG1152843", Status="A", Steward="006", Time="13:21", Cover=1, Quantity=1, Rate=285.71m, ItemName="CHICKEN PAKORAS", Amount=285.71m },
        // Add more data...
    };

    private IEnumerable<TableInfo> FilteredTables => SelectedTab switch
    {
        "Occupied" => AllTables.Where(t => t.Status == "A" && !string.IsNullOrEmpty(t.OrderNo)),
        "Vacant" => Enumerable.Range(1, 12)
            .Select(i => new TableInfo { TableNo = i.ToString("000"), Status = "A" }),
        _ => AllTables,
    };

    private void SelectTab(string tab) => SelectedTab = tab;

    private string GetTabClass(string tab) =>
        $"tab-btn {(SelectedTab == tab ? "active" : "")}";

    private string GetRowClass(TableInfo table) =>
        table.Status switch
        {
            "A" => "status-active",
            _ => "status-inactive"
        };

    public class TableInfo
    {
        public string TableNo { get; set; } = "";
        public string? OrderNo { get; set; }
        public string? Status { get; set; }
        public string? Steward { get; set; }
        public string? Time { get; set; }
        public int Cover { get; set; }
        public int Quantity { get; set; }
        public decimal Rate { get; set; }
        public string? ItemName { get; set; }
        public decimal Amount { get; set; }
    }
}
<style>
    .table-container {
        background: #ffffff;
        border-radius: 16px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        margin: 10px;
        display: flex;
        flex-direction: column;
        height: 80vh; /*  fixed overall height */
    }

    .tab-header {
        display: flex;
        justify-content: flex-start;
        border-bottom: 2px solid #f0f0f0;
        background: #fafafa;
        padding: 0.5rem 1rem;
        gap: 0.5rem;
        position: sticky;
        top: 0;
        z-index: 2;
    }

    .tab-btn {
        background: transparent;
        border: none;
        padding: 0.6rem 1.2rem;
        font-weight: 600;
        color: #555;
        border-radius: 8px;
        cursor: pointer;
        transition: 0.2s;
    }

        .tab-btn.active {
            background: #0078ff;
            color: white;
            box-shadow: 0 2px 5px rgba(0, 120, 255, 0.3);
        }

        .tab-btn:hover {
            background: rgba(0, 120, 255, 0.1);
        }

    .responsive-table {
        width: 100%;
        overflow-y: auto; /* 👈 scroll only data */
        flex-grow: 1; /* fills remaining height */
    }

    table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.9rem;
        min-width: 800px;
    }

    thead {
        position: sticky; /* 👈 keep header fixed */
        top: 0;
        z-index: 1;
    }

    th {
        background: #0078ff;
        color: white;
        text-align: left;
        padding: 0.7rem;
        font-weight: 600;
        white-space: nowrap;
    }

    td {
        padding: 0.6rem;
        border-bottom: 1px solid #eee;
        color: #333;
    }

    /* Zebra (alternate row) colors */
    tbody tr:nth-child(odd) {
        background-color: #f9fafc;
    }

    tbody tr:nth-child(even) {
        background-color: #ffffff;
    }

    /* Hover effect */
    tbody tr:hover {
        background-color: #eaf3ff;
        transition: 0.2s;
    }

    .status-active {
        color: #0078ff;
        font-weight: 600;
    }

    .status-inactive {
        color: #999;
    }

    /* Responsive tweaks */
    @@media (max-width: 768px) {
        table {
            font-size: 0.8rem;
            min-width: 600px;
        }

        .tab-btn {
            padding: 0.4rem 0.8rem;
            font-size: 0.85rem;
        }
    }

    @@media (max-width: 480px) {
        th, td {
            padding: 0.4rem;
        }
    }

</style>

